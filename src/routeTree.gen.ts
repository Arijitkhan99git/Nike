/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WomenIndexRouteImport } from './routes/women/index'
import { Route as SnkrsIndexRouteImport } from './routes/snkrs/index'
import { Route as SignInIndexRouteImport } from './routes/signIn/index'
import { Route as SaleIndexRouteImport } from './routes/sale/index'
import { Route as MenIndexRouteImport } from './routes/men/index'
import { Route as KidsIndexRouteImport } from './routes/kids/index'
import { Route as JoinUsIndexRouteImport } from './routes/joinUs/index'
import { Route as HelpIndexRouteImport } from './routes/help/index'
import { Route as FindStoreIndexRouteImport } from './routes/findStore/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WomenIndexRoute = WomenIndexRouteImport.update({
  id: '/women/',
  path: '/women/',
  getParentRoute: () => rootRouteImport,
} as any)
const SnkrsIndexRoute = SnkrsIndexRouteImport.update({
  id: '/snkrs/',
  path: '/snkrs/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInIndexRoute = SignInIndexRouteImport.update({
  id: '/signIn/',
  path: '/signIn/',
  getParentRoute: () => rootRouteImport,
} as any)
const SaleIndexRoute = SaleIndexRouteImport.update({
  id: '/sale/',
  path: '/sale/',
  getParentRoute: () => rootRouteImport,
} as any)
const MenIndexRoute = MenIndexRouteImport.update({
  id: '/men/',
  path: '/men/',
  getParentRoute: () => rootRouteImport,
} as any)
const KidsIndexRoute = KidsIndexRouteImport.update({
  id: '/kids/',
  path: '/kids/',
  getParentRoute: () => rootRouteImport,
} as any)
const JoinUsIndexRoute = JoinUsIndexRouteImport.update({
  id: '/joinUs/',
  path: '/joinUs/',
  getParentRoute: () => rootRouteImport,
} as any)
const HelpIndexRoute = HelpIndexRouteImport.update({
  id: '/help/',
  path: '/help/',
  getParentRoute: () => rootRouteImport,
} as any)
const FindStoreIndexRoute = FindStoreIndexRouteImport.update({
  id: '/findStore/',
  path: '/findStore/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/findStore': typeof FindStoreIndexRoute
  '/help': typeof HelpIndexRoute
  '/joinUs': typeof JoinUsIndexRoute
  '/kids': typeof KidsIndexRoute
  '/men': typeof MenIndexRoute
  '/sale': typeof SaleIndexRoute
  '/signIn': typeof SignInIndexRoute
  '/snkrs': typeof SnkrsIndexRoute
  '/women': typeof WomenIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/findStore': typeof FindStoreIndexRoute
  '/help': typeof HelpIndexRoute
  '/joinUs': typeof JoinUsIndexRoute
  '/kids': typeof KidsIndexRoute
  '/men': typeof MenIndexRoute
  '/sale': typeof SaleIndexRoute
  '/signIn': typeof SignInIndexRoute
  '/snkrs': typeof SnkrsIndexRoute
  '/women': typeof WomenIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/findStore/': typeof FindStoreIndexRoute
  '/help/': typeof HelpIndexRoute
  '/joinUs/': typeof JoinUsIndexRoute
  '/kids/': typeof KidsIndexRoute
  '/men/': typeof MenIndexRoute
  '/sale/': typeof SaleIndexRoute
  '/signIn/': typeof SignInIndexRoute
  '/snkrs/': typeof SnkrsIndexRoute
  '/women/': typeof WomenIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/findStore'
    | '/help'
    | '/joinUs'
    | '/kids'
    | '/men'
    | '/sale'
    | '/signIn'
    | '/snkrs'
    | '/women'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/findStore'
    | '/help'
    | '/joinUs'
    | '/kids'
    | '/men'
    | '/sale'
    | '/signIn'
    | '/snkrs'
    | '/women'
  id:
    | '__root__'
    | '/'
    | '/findStore/'
    | '/help/'
    | '/joinUs/'
    | '/kids/'
    | '/men/'
    | '/sale/'
    | '/signIn/'
    | '/snkrs/'
    | '/women/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FindStoreIndexRoute: typeof FindStoreIndexRoute
  HelpIndexRoute: typeof HelpIndexRoute
  JoinUsIndexRoute: typeof JoinUsIndexRoute
  KidsIndexRoute: typeof KidsIndexRoute
  MenIndexRoute: typeof MenIndexRoute
  SaleIndexRoute: typeof SaleIndexRoute
  SignInIndexRoute: typeof SignInIndexRoute
  SnkrsIndexRoute: typeof SnkrsIndexRoute
  WomenIndexRoute: typeof WomenIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/women/': {
      id: '/women/'
      path: '/women'
      fullPath: '/women'
      preLoaderRoute: typeof WomenIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/snkrs/': {
      id: '/snkrs/'
      path: '/snkrs'
      fullPath: '/snkrs'
      preLoaderRoute: typeof SnkrsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signIn/': {
      id: '/signIn/'
      path: '/signIn'
      fullPath: '/signIn'
      preLoaderRoute: typeof SignInIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sale/': {
      id: '/sale/'
      path: '/sale'
      fullPath: '/sale'
      preLoaderRoute: typeof SaleIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/men/': {
      id: '/men/'
      path: '/men'
      fullPath: '/men'
      preLoaderRoute: typeof MenIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/kids/': {
      id: '/kids/'
      path: '/kids'
      fullPath: '/kids'
      preLoaderRoute: typeof KidsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/joinUs/': {
      id: '/joinUs/'
      path: '/joinUs'
      fullPath: '/joinUs'
      preLoaderRoute: typeof JoinUsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/help/': {
      id: '/help/'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof HelpIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/findStore/': {
      id: '/findStore/'
      path: '/findStore'
      fullPath: '/findStore'
      preLoaderRoute: typeof FindStoreIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FindStoreIndexRoute: FindStoreIndexRoute,
  HelpIndexRoute: HelpIndexRoute,
  JoinUsIndexRoute: JoinUsIndexRoute,
  KidsIndexRoute: KidsIndexRoute,
  MenIndexRoute: MenIndexRoute,
  SaleIndexRoute: SaleIndexRoute,
  SignInIndexRoute: SignInIndexRoute,
  SnkrsIndexRoute: SnkrsIndexRoute,
  WomenIndexRoute: WomenIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
